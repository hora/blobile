{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","this","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","key","onUpdate","RouteRedirect","ionRouteRedirectChanged","generatePath","segments","filter","s","join","parsePath","path","split","map","trim","writeNavState","async","root","chain","direction","index","changed","animation","outlet","searchNavNode","componentOnReady","route","setRouteId","id","params","result","element","markVisible","console","error","e","QUERY","matches","querySelector","routeRedirect","routes","find","input","from","i","expected","matchesIDs","ids","len","Math","min","toLowerCase","matchesPath","inputPath","allparams","RouterSegments","matchesDefault","segment","data","next","slice","mergeParams","a","b","assign","routerPathToChain","chains","match","matchedChain","score","computePriority","level","pow","f","shift","readRedirects","Array","children","el","tagName","to","readProp","readRoutes","flattenRouterTree","readRouteNodes","node","component","Error","componentProps","beforeLeave","beforeEnter","prop","hasAttribute","getAttribute","nodes","flattenNode","push","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","state","lastState","useHash","debug","document","body","Promise","resolve","window","addEventListener","once","onRoutesChanged","onRedirectChanged","bind","historyDirection","getPath","runGuards","canProceed","redirect","writeNavStateRoot","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","pathname","queryString","setPath","history","waitPromise","group","forEach","r","groupEnd","redirects","warn","getRouteId","maxMatches","plainIDs","param","safeWriteNavState","win","replaceState","title","redirectFrom","lock","unlock","p","toChain","fromChain","beforeEnterHook","beforeLeaveHook","canLeave","canEnter","routeEvent","routeChangeEvent","pushState","loc","hash","prefix","redirectFromPath","redirectedFrom","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","class","color","style"],"mappings":"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","file":"x","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { m as debounce } from './helpers-fde0057c.js';\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\n\nconst Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nconst RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\nconst generatePath = (segments) => {\n  const path = segments\n    .filter(s => s.length > 0)\n    .join('/');\n  return '/' + path;\n};\nconst chainToPath = (chain) => {\n  const path = [];\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        path.push(param);\n      }\n      else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n  return path;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  let url = generatePath([\n    ...parsePath(root),\n    ...path\n  ]);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url = url + '?' + queryString;\n  }\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i].length > 0 && prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n  if (path.length === prefix.length) {\n    return [''];\n  }\n  return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n  let pathname = loc.pathname;\n  if (useHash) {\n    const hash = loc.hash;\n    pathname = (hash[0] === '#')\n      ? hash.slice(1)\n      : '';\n  }\n  const prefix = parsePath(root);\n  const path = parsePath(pathname);\n  return removePrefix(prefix, path);\n};\nconst parsePath = (path) => {\n  if (path == null) {\n    return [''];\n  }\n  const removeQueryString = path.split('?')[0];\n  const segments = removeQueryString.split('/')\n    .map(s => s.trim())\n    .filter(s => s.length > 0);\n  if (segments.length === 0) {\n    return [''];\n  }\n  else {\n    return segments;\n  }\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await outlet.componentOnReady();\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    outlet = searchNavNode(node);\n    if (outlet) {\n      const id = await outlet.getRouteId();\n      if (id) {\n        node = id.element;\n        id.element = undefined;\n        ids.push(id);\n      }\n      else {\n        break;\n      }\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\n  });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(QUERY)) {\n    return root;\n  }\n  const outlet = root.querySelector(QUERY);\n  return outlet ? outlet : undefined;\n};\n\nconst matchesRedirect = (input, route) => {\n  const { from, to } = route;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > input.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== input[i]) {\n      return false;\n    }\n  }\n  return from.length === input.length;\n};\nconst routeRedirect = (path, routes) => {\n  return routes.find(route => matchesRedirect(path, route));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let i = 0;\n  for (; i < len; i++) {\n    if (ids[i].toLowerCase() !== chain[i].id) {\n      break;\n    }\n  }\n  return i;\n};\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n    if (path[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of path) {\n        const data = segments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = (matchesDefault)\n    ? matchesDefault === (segments.next() === '')\n    : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i])\n    }));\n  }\n  return chain;\n};\nconst mergeParams = (a, b) => {\n  if (!a && b) {\n    return b;\n  }\n  else if (a && !b) {\n    return a;\n  }\n  else if (a && b) {\n    return Object.assign(Object.assign({}, a), b);\n  }\n  return undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  const plainIDs = ids.map(i => i.id);\n  for (const chain of chains) {\n    const score = matchesIDs(plainIDs, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n  return null;\n};\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n    return '';\n  }\n}\n\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')),\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (root, node = root) => {\n  return Array.from(node.children)\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n    .map(el => {\n    const component = readProp(el, 'component');\n    if (component == null) {\n      throw new Error('component missing in ion-route');\n    }\n    return {\n      path: parsePath(readProp(el, 'url')),\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(root, el)\n    };\n  });\n};\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\nconst flattenRouterTree = (nodes) => {\n  const routes = [];\n  for (const node of nodes) {\n    flattenNode([], routes, node);\n  }\n  return routes;\n};\nconst flattenNode = (chain, routes, node) => {\n  const s = chain.slice();\n  s.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n  if (node.children.length === 0) {\n    routes.push(s);\n    return;\n  }\n  for (const sub of node.children) {\n    flattenNode(s, routes, sub);\n  }\n};\n\nconst Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * By default `ion-router` will match the routes at the root path (\"/\").\n     * That can be changed when\n     *\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the otherside hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    console.debug('[ion-router] router will load');\n    await waitUntilNavNode();\n    console.debug('[ion-router] found nav');\n    await this.onRoutesChanged();\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let path = this.getPath();\n    const canProceed = await this.runGuards(path);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        path = parsePath(canProceed.redirect);\n      }\n      return false;\n    }\n    console.debug('[ion-router] URL changed -> update nav', path, direction);\n    return this.writeNavStateRoot(path, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(url, direction = 'forward', animation) {\n    if (url.startsWith('.')) {\n      url = (new URL(url, window.location.href)).pathname;\n    }\n    console.debug('[ion-router] URL pushed -> updating nav', url, direction);\n    let path = parsePath(url);\n    let queryString = url.split('?')[1];\n    const canProceed = await this.runGuards(path);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        path = parsePath(canProceed.redirect);\n        queryString = canProceed.redirect.split('?')[1];\n      }\n      else {\n        return false;\n      }\n    }\n    this.setPath(path, direction, queryString);\n    return this.writeNavStateRoot(path, direction, animation);\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    console.debug('CURRENT PATH', this.getPath());\n    console.debug('PREVIOUS PATH', this.previousPath);\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = routerIDsToChain(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n      return false;\n    }\n    const path = chainToPath(chain);\n    if (!path) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    console.debug('[ion-router] nav changed -> update URL', ids, path);\n    this.setPath(path, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n    return true;\n  }\n  onRedirectChanged() {\n    const path = this.getPath();\n    if (path && routeRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, win.document.location && win.document.location.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    else if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    else {\n      return ROUTER_INTENT_NONE;\n    }\n  }\n  async writeNavStateRoot(path, direction, animation) {\n    if (!path) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = routeRedirect(path, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      this.setPath(redirect.to, direction);\n      redirectFrom = redirect.from;\n      path = redirect.to;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = routerPathToChain(path, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise(r => resolve = r);\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  async runGuards(to = this.getPath(), from = parsePath(this.previousPath)) {\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const toChain = routerPathToChain(to, routes);\n    const fromChain = routerPathToChain(from, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const canEnter = beforeEnterHook ? await beforeEnterHook() : true;\n    if (canEnter === false || typeof canEnter === 'object') {\n      return canEnter;\n    }\n    return true;\n  }\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    if (changed) {\n      console.debug('[ion-router] route changed', path);\n    }\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nconst RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"]}