{"version":3,"sources":["webpack:///node_modules/@egstad/marquee/src/index.js","webpack:///src/app/live-feed/live-feed.page.html","webpack:///src/app/live-feed/live-feed-routing.module.ts","webpack:///src/app/live-feed/live-feed.page.ts","webpack:///src/app/live-feed/live-feed.module.ts"],"names":["Marquee","el","this","TypeError","document","querySelector","sign","children","RAF","offset","offsetWidth","speed","dataset","onResize","getSignWidth","bind","styleElements","init","draw","window","addEventListener","style","display","signWidth","clientWidth","requestAnimationFrame","performAnimation","reset","transform","cancelAnimationFrame","stop","removeEventListener","LiveFeedPage","LiveFeedPageRoutingModule","LiveFeedPageModule","routes","path","component","stream","database","loadingController","platform","settings","streamData","games","segment","ready","errors","lastUpdateTime","Date","now","filterVisible","stale","staleThreshold","keepAwake","PHASES","uiState","schedule","console","debug","showLoading","startListening","subscription","unsubscribe","undefined","content","scrollToTop","loading","evt","setTimeout","retry","target","complete","searchTerm","srcElement","value","refreshUI","length","filter","game","inProgress","getActiveGames","isFavorite","homeTeam","awayTeam","getFavoriteGames","ret","warn","favoriteTeam","sort","a","b","nameA","homeTeamNickname","nameB","type","clockUpdater","setInterval","countdown","sim","winner","postseason","playoffs","team","leagues","teams","find","id","playoffDay","hours","minutes","seconds","getSegmentGames","homeTeamName","toLowerCase","indexOf","awayTeamName","detail","setSegment","current","active","disableSleep","KeepAwake","getActiveGameCount","allowSleep","err","error","ErrorEvent","onError","checkStale","Object","keys","data","key","onUpdate","checkDisableSleep","seasonHeader","notice","countdownNotice","day","phase","REST","PRESEASON","POSTSEASON_END","ELECTION","EARLY_SIESTA","LATE_SIESTA","SEASON_END","PRE_POSTSEASON","EARLY_POSTSEASON_END","EARLY_POSTSEASON","POSTSEASON","EARLSEASON","MIDSEASON","doCountdown","getWinner","seasonNumber","playOffRound","season","clearInterval","assign","hideLoading","subscribe","onEvent","globalEvents","then","events","event","expire","elem","getElementById","setAttribute","index","item","String","forceRefresh","forChild"],"mappings":"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","file":"x","sourcesContent":["export default class Marquee {\n  constructor(el) {\n    // marquee el\n    if (typeof el === \"object\") {\n      this.el = el;\n    } else if (typeof el === \"string\") {\n      this.el = document.querySelector(el);  \n    } else {\n      throw new TypeError(\"Marquee accepts either a HTML Element (object) or a class/id to query (string).\");\n    }\n    // marquee content\n    this.sign = this.el.children[0];\n    // raf instance, cached for cancel\n    this.RAF = null;\n    this.offset = this.el.offsetWidth;\n    this.speed = this.el.dataset.speed || 1;\n    // let's bind the window resize event for easy setup/teardown\n    this.onResize = this.getSignWidth.bind(this)\n    \n    this.styleElements();\n    this.init();\n  }\n  init() {\n    // measure the sign's width\n    this.getSignWidth();\n    // begin animation\n    this.draw();\n    // in case the contents change size on resize,\n    // fetch & update the size for animation\n    window.addEventListener(\"resize\", this.onResize)\n  }\n  styleElements() {\n    this.el.style.display = \"flex\";\n    this.sign.style.display = \"inline-flex\";\n  }\n  getSignWidth() {\n    this.signWidth = this.sign.clientWidth\n  }\n  draw() {\n    const performAnimation = () => {\n      // loop it!\n      this.RAF = requestAnimationFrame(performAnimation);\n\n      // if the item is fully hidden, start animation over\n      if (-this.offset >= this.signWidth) {\n        this.reset()\n      }\n      \n      // update offset\n      this.offset = this.offset - this.speed;\n      this.sign.style.transform = `translate3d(${this.offset}px, 0, 0)`;\n    };\n\n    requestAnimationFrame(performAnimation);\n  }\n  stop() {\n    cancelAnimationFrame(this.RAF);\n  }\n  reset() {\n    this.offset = this.el.offsetWidth;\n    this.sign.style.transform = `translate3d(${this.offset}px, 0, 0)`;\n  }\n  destroy() {\n    this.stop()\n    window.removeEventListener(\"resize\", this.onResize)\n  }\n}\n\n\n\n","<ion-header translucent=\"true\">\n  <ion-toolbar color=\"primary\" (click)=\"scrollToTop()\">\n    <ion-title>Blases Loaded</ion-title>\n    <ion-buttons slot=\"secondary\">\n      <ion-button *ngIf=\"loading || stale\">\n        <ion-spinner></ion-spinner>\n      </ion-button>\n      <!--\n      <ion-button *ngIf=\"errors &gt; 0 && !isPostseasonComplete()\">\n        <ion-icon name=\"alert-circle-outline\" color=\"danger\"></ion-icon>\n      </ion-button>\n      -->\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-toolbar *ngIf=\"ready && !uiState.notice\">\n    <ion-buttons slot=\"primary\">\n      <!-- this is just to fix spacing for now, I'll figure out something better eventually -->\n      <ion-button>\n        <ion-icon></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-segment (ionChange)=\"segmentChanged($event)\" [value]=\"segment\">\n      <ion-segment-button value=\"all\">\n        <ion-label>All ({{getGameCount()}})</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"active\">\n        <ion-label>Active ({{getActiveGameCount()}})</ion-label>\n      </ion-segment-button>\n      <ion-segment-button value=\"favorites\">\n        <ion-label>Favorites ({{getFavoriteGameCount()}})</ion-label>\n      </ion-segment-button>\n    </ion-segment>\n    <ion-buttons slot=\"secondary\">\n      <ion-button (click)=\"toggleSearchbar()\">\n        <ion-icon name=\"search-outline\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n  \n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"forceRefresh($event)\">\n    <ion-refresher-content\n      pullingIcon=\"baseball-outline\"\n    ><ion-spinner name=\"default\"></ion-spinner>\n    </ion-refresher-content>\n  </ion-refresher>\n  <ion-searchbar *ngIf=\"filterVisible\" debounce=\"200\" value=\"{{searchTerm}}\" showCancelButton=\"focus\" (ionInput)=\"filterList($event)\"></ion-searchbar>\n  <span *ngIf=\"ready\">\n    <span *ngIf=\"uiState.notice\">\n      <ion-item lines=\"none\">\n        <h4>{{uiState.notice}}</h4>\n      </ion-item>\n      <ion-item lines=\"none\" *ngIf=\"uiState.winner\">\n        <h4>\n          The\n          <!-- <span [style]=\"'color: ' + uiState.winner.mainColor\">{{uiState.winner.fullName}}</span> -->\n          <app-team team=\"home\" [teamColor]=\"uiState.winner.mainColor\" [emoji]=\"uiState.winner.emoji\" [name]=\"uiState.winner.fullName\"></app-team>\n          are the Champions!\n        </h4>\n      </ion-item>\n      <ion-item lines=\"none\" *ngIf=\"uiState.countdownNotice !== undefined && countdown && countdown.diff >= 0\">\n        <h4>\n          {{uiState.countdownNotice}}\n          <br>\n          {{getCountdown()}}\n        </h4>\n      </ion-item>\n      <ion-item lines=\"none\" *ngIf=\"uiState.countdownNotice !== undefined && countdown && countdown.diff &lt; 0\">\n        <h4>Next season starts in... uhh.  <i>*tugs collar*</i> I mean. What <i>is</i> time, really?</h4>\n      </ion-item>\n      <div id=\"marquee\" data-speed=\"1\">\n        <div class=\"marquee\">\n          <div class=\"marquee-item\" *ngFor=\"let event of globalEvents\">\n            {{event.msg}}...\n            &nbsp;\n            &nbsp;\n            &nbsp;\n          </div>\n        </div>\n      </div>\n    </span>\n    <span *ngIf=\"!uiState.notice\">\n      <ion-item lines=\"none\" *ngIf=\"uiState.seasonHeader\">\n        <h4 *ngIf=\"streamData && streamData.games\" class=\"ion-no-margin\">{{uiState.seasonHeader}}</h4>\n      </ion-item>\n      <ion-item lines=\"none\" *ngIf=\"segment === 'active' && (!games || games.length === 0)\">\n        No active games for day {{streamData.games.sim.day}}.\n      </ion-item>\n      <ion-grid style=\"margin-top: 0; padding-top: 0\">\n        <ion-row>\n          <!-- size-xs=\"12\" size-sm=\"12\" size-md=\"12\" size-lg=\"6\" size-xl=\"6\" -->\n          <ion-col size=\"12\" *ngFor=\"let game of games; trackBy: gameId\">\n            <app-diamond [game]=\"game\" prefix=\"live-diamond\" (refresh)=\"refreshUI()\"></app-diamond>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </span>\n  </span>\n</ion-content>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LiveFeedPage } from './live-feed.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LiveFeedPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LiveFeedPageRoutingModule {}\n","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { LoadingController, IonContent, Platform } from '@ionic/angular';\n\nimport { Plugins } from '@capacitor/core';\n\nimport { Subscription } from 'rxjs';\n\nimport Marquee from '@egstad/marquee/src';\n\nimport { APIStream } from '../../lib/api/stream';\nimport { SettingsService, SEGMENT } from '../../lib/settings.service';\n\nimport { StreamData } from '../../lib/model/streamData';\nimport { Game } from '../../lib/model/game';\nimport { Team } from '../../lib/model/team';\n\nimport { GlobalEvent } from 'src/lib/model/globalEvent';\nimport { APIDatabase } from 'src/lib/api/database';\nimport { Countdown } from 'src/lib/model/sim';\nimport { PHASES } from 'src/lib/model/phases';\n\n@Component({\n  selector: 'app-live-feed',\n  templateUrl: 'live-feed.page.html',\n  styleUrls: ['live-feed.page.scss']\n})\nexport class LiveFeedPage implements OnInit, OnDestroy {\n  @ViewChild(IonContent, { static: false }) content: IonContent;\n\n  public streamData = new StreamData({});\n  public games = [] as Game[];\n  public searchTerm: string;\n  public segment = 'all' as SEGMENT;\n\n  // protected loading: HTMLIonLoadingElement;\n  public loading: boolean;\n  public ready = false;\n  public errors = 0;\n  public lastUpdateTime = Date.now();\n  public filterVisible = false;\n  public stale = false;\n  public staleThreshold = 30 * 1000; // 30s\n\n  private subscription: Subscription;\n\n  private clockUpdater: number;\n  public countdown: Countdown;\n  public globalEvents: GlobalEvent[];\n  private keepAwake = false;\n  public phase: PHASES;\n  public PHASES = PHASES;\n  public uiState = {} as { [key: string]: any };\n\n  constructor(\n    private stream: APIStream,\n    private database: APIDatabase,\n    public loadingController: LoadingController,\n    private platform: Platform,\n    protected settings: SettingsService) {\n  }\n\n  private get schedule(): Game[] {\n    return this.streamData?.games?.schedule || [];\n  }\n\n  async ngOnInit() {\n    await this.platform.ready();\n    await this.settings.ready;\n\n    console.debug('LiveFeed.ngOnInit()');\n    this.showLoading();\n\n    this.segment = this.settings.segment();\n    await this.startListening();\n    return true;\n  }\n\n  async ngOnDestroy() {\n    this.ready = false;\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n    return true;\n  }\n\n  async scrollToTop() {\n    this.content.scrollToTop();\n  }\n\n  async showLoading() {\n    this.loading = true;\n  }\n\n  async hideLoading() {\n    this.loading = false;\n    this.ready = true;\n  }\n\n  forceRefresh(evt: any) {\n    setTimeout(() => {\n      this.stream.retry().finally(() => {\n        evt?.target?.complete();\n      });\n    }, 500);\n  }\n\n  toggleSearchbar() {\n    this.filterVisible = !this.filterVisible;\n    console.debug(`LiveFeed.toggleSearchbar(): filterVisible=${this.filterVisible}`);\n  }\n\n  filterList(evt: any) {\n    this.searchTerm = evt.srcElement.value;\n    return this.refreshUI();\n  }\n\n  getGameCount(): number {\n    return this.streamData?.games?.schedule?.length || 0;\n  }\n\n  getActiveGames(): Game[] {\n    if (this.streamData?.games?.schedule) {\n      return this.streamData.games.schedule.filter((game: Game) => {\n        return game.inProgress;\n      });\n    }\n    return [];\n  }\n\n  getActiveGameCount(): number {\n    return this.getActiveGames().length;\n  }\n\n  getFavoriteGames(): Game[] {\n    if (this.streamData?.games?.schedule) {\n      return this.streamData?.games?.schedule.filter((game: Game) => {\n        return this.settings.isFavorite(game.homeTeam) || this.settings.isFavorite(game.awayTeam);\n      });\n    }\n    return [];\n  }\n\n  getFavoriteGameCount(): number {\n    return this.getFavoriteGames().length;\n  }\n\n  getSegmentGames(): Game[] {\n    console.debug('LiveFeed.getSegmentGames()');\n\n    let ret = [] as Game[];\n    switch (this.segment) {\n      case 'all':\n        ret = this.streamData?.games?.schedule || [];\n        break;\n      case 'active':\n        ret = this.getActiveGames();\n        break;\n      case 'favorites':\n        ret = this.getFavoriteGames();\n        break;\n      default:\n        console.warn(`LiveFeed.getSegmentGames(): unhandled segment: ${this.segment}`);\n        ret = [];\n        break;\n    }\n\n    // return [ret[0]];\n\n    const favoriteTeam = this.settings.favoriteTeam();\n    return ret.sort((a: Game, b: Game) => {\n      // always put favorite team first\n      if (a.homeTeam === favoriteTeam || a.awayTeam === favoriteTeam) {\n        return -1;\n      } else if (b.homeTeam === favoriteTeam || b.awayTeam === favoriteTeam) {\n        return 1;\n      }\n\n      if (this.settings.isFavorite(a.homeTeam) || this.settings.isFavorite(a.awayTeam)) {\n        return -1;\n      } else if (this.settings.isFavorite(b.homeTeam) || this.settings.isFavorite(b.awayTeam)) {\n        return 1;\n      }\n\n      const nameA = a.homeTeamNickname;\n      const nameB = b.homeTeamNickname;\n      return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;\n    });\n  }\n\n  doCountdown(type: string) {\n    if (!this.clockUpdater) {\n      this.clockUpdater = setInterval(() => {\n        this.countdown = this.streamData.sim[type]();\n      }, 1000) as unknown as number;\n    }\n  }\n\n  getWinner() {\n    const winner = this.streamData?.games?.postseason?.playoffs?.winner;\n    if (winner) {\n      const team = this.streamData.leagues.teams.find((team: Team) => team.id === winner);\n      console.debug('getWinner():', team);\n      return team;\n    }\n    return undefined;\n  }\n\n  getPlayoffDay() {\n    return (this.streamData?.games?.postseason?.playoffs?.playoffDay || 0);\n  }\n\n  getCountdown() {\n    return `${this.countdown.hours} ${this.countdown.hours === 1 ? 'hour' : 'hours'}, ${this.countdown.minutes} ${this.countdown.minutes === 1 ? 'minute' : 'minutes'}, ${this.countdown.seconds} ${this.countdown.seconds === 1 ? 'second' : 'seconds'}`;\n  }\n\n  refreshUI(): Game[] {\n    console.debug('LiveFeed.refreshUI()');\n\n    let ret = this.getSegmentGames();\n\n    if (this.searchTerm && this.searchTerm.length >= 2) {\n      // search term is long enough, filter based on team names\n      ret = ret.filter((game: any) => {\n        return game.homeTeamName.toLowerCase().indexOf(this.searchTerm.toLowerCase()) > -1\n          || game.awayTeamName.toLowerCase().indexOf(this.searchTerm.toLowerCase()) > -1;\n      });\n    }\n\n    this.games = ret;\n    return this.games;\n  }\n\n  segmentChanged(evt: any) {\n    if (evt && evt.detail && evt.detail.value) {\n      this.segment = evt.detail.value;\n      this.settings.setSegment(this.segment);\n    }\n    console.debug('LiveFeed.segmentChanged():', evt);\n    this.refreshUI();\n  }\n\n  checkStale() {\n    const current = this.stale;\n    if (this.games && this.games.length > 0) {\n      const active = this.games.find(game => game.inProgress);\n      if (active) {\n        // there are still active games, check staleness based on the last update received\n        if (this.lastUpdateTime + this.staleThreshold < Date.now()) {\n          this.stale = true;\n        } else {\n          this.stale = false;\n        }\n      } else {\n        // all active games have completed\n        this.stale = false;\n        // const percent = Math.round(Date.now() % (60 * 60 * 1000) / (60 * 60 * 1000)); // how far through the hour are we?\n      }\n    }\n\n    console.debug(`LiveFeed.checkStale(): ${current} -> ${this.stale}`);\n  }\n\n  checkDisableSleep() {\n    console.debug('LiveFeed.checkDisableSleep()');\n    const disableSleep = this.settings.disableSleep();\n\n    if (!Plugins.KeepAwake) {\n      return;\n    }\n\n    try {\n      if (disableSleep && this.getActiveGameCount() > 0) {\n        if (!this.keepAwake) {\n          console.debug('LiveFeed.checkDisableSleep(): keeping awake');\n          this.keepAwake = true;\n          Plugins.KeepAwake.keepAwake();\n        }\n      } else {\n        if (this.keepAwake) {\n          console.debug('LiveFeed.checkDisableSleep(): allowing sleep');\n          this.keepAwake = false;\n          Plugins.KeepAwake.allowSleep();\n        }\n      }\n    } catch (err) {\n      console.error('An error occurred setting keep-awake status.', err);\n    }\n  }\n\n  async onEvent(value: StreamData|ErrorEvent) {\n    console.debug('LiveFeed.onEvent()');\n    if (value && value instanceof ErrorEvent) {\n      console.warn('LiveFeed.onEvent(): got an error:', value);\n      this.onError(value);\n      return;\n    }\n\n    const streamData = value as StreamData;\n\n    this.lastUpdateTime = Date.now();\n    console.debug('LiveFeed.onEvent(): lastUpdateTime=', this.lastUpdateTime);\n    setTimeout(() => {\n      this.errors = 0;\n      this.checkStale();\n    }, 1000);\n\n    for (const key of Object.keys(streamData.data)) {\n      this.streamData.data[key] = streamData.data[key];\n    }\n\n    console.debug('LiveFeed.onEvent(): current data:', this.streamData);\n\n    this.onUpdate();\n  }\n\n  onError(evt: Event) {\n    console.debug('LiveFeed.onError():', evt);\n    this.onUpdate();\n    // wait a couple of seconds before actually marking it as an error\n    setTimeout(() => {\n      this.errors++;\n      this.checkStale();\n    }, 1000);\n  }\n\n  async onUpdate() {\n    this.checkDisableSleep();\n    this.refreshUI();\n\n    const uiState = {\n      seasonHeader: undefined,\n      notice: undefined,\n      countdownNotice: undefined,\n      winner: undefined,\n    };\n\n    if (!this.streamData && !this.streamData.sim) {\n      return;\n    }\n\n    const day = this.streamData?.games?.sim?.day;\n    const round = this.streamData?.sim?.playOffRound;\n    const phase = this.streamData?.sim?.phase;\n\n    switch (phase) {\n      case PHASES.REST:\n      case PHASES.PRESEASON:\n      case PHASES.POSTSEASON_END:\n      case PHASES.ELECTION:\n      {\n        this.doCountdown('countdownToNextPhase');\n        uiState.notice = 'Games have finished for the season.';\n        uiState.countdownNotice = 'Next season starts in:';\n        uiState.winner = this.getWinner();\n        break;\n      }\n\n      case PHASES.EARLY_SIESTA:\n      {\n        this.doCountdown('countdownToNextPhase');\n        uiState.notice = `Earlseason is complete.`;\n        uiState.countdownNotice = `Midseason starts in:`;\n        break;\n      }\n\n      case PHASES.LATE_SIESTA:\n      {\n        this.doCountdown('countdownToNextPhase');\n        uiState.notice = `Midseason is complete.`;\n        uiState.countdownNotice = `Lateseason starts in:`;\n        break;\n      }\n\n      case PHASES.SEASON_END:\n      case PHASES.PRE_POSTSEASON:\n      {\n        this.doCountdown('countdownToNextPhase');\n        uiState.notice = `Regular Season ${this.streamData.seasonNumber} is over.`;\n        uiState.countdownNotice = `Earlpostseason starts in:`;\n        break;\n      }\n\n      case PHASES.EARLY_POSTSEASON_END:\n      {\n        this.doCountdown('countdownToNextPhase');\n        uiState.notice = 'Earlpostseason is over.';\n        uiState.countdownNotice = 'Latepostseason starts in:';\n        break;\n      }\n      case PHASES.EARLY_POSTSEASON:\n      {\n        uiState.seasonHeader = `Earlpostseason, Day ${day}`;\n        break;\n      }\n      case PHASES.POSTSEASON:\n      {\n        uiState.seasonHeader = `Postseason Round ${this.streamData.games.sim.playOffRound}, Day ${day}`;\n        break;\n      }\n      case PHASES.EARLSEASON:\n      case PHASES.MIDSEASON:\n      default:\n        uiState.seasonHeader = `Season ${this.streamData?.games?.season?.seasonNumber}, Day ${day}`;\n        break;\n    }\n\n    if (!this.uiState.notice && this.clockUpdater) {\n      clearInterval(this.clockUpdater);\n      this.clockUpdater = undefined;\n      this.countdown = undefined;\n    }\n\n    this.phase = phase;\n    Object.assign(this.uiState, uiState);\n\n    this.hideLoading();\n  }\n\n  async startListening() {\n    console.debug('LiveFeed.startListening(): opening event stream to blaseball.com');\n    this.showLoading();\n\n    this.subscription?.unsubscribe();\n    this.subscription = await this.stream.subscribe((evt) => {\n      this.onEvent(evt);\n    }, (err) => {\n      this.onError(err);\n    });\n\n    this.database.globalEvents().then((events: GlobalEvent[]) => {\n      this.globalEvents = events.filter((event: GlobalEvent) => event.expire === null);\n\n      setTimeout(() => {\n        const elem = document.getElementById('marquee');\n        if (elem) {\n          const marquee = new Marquee(elem);\n          setTimeout(() => {\n            elem.setAttribute('style', 'visibility: visible');\n          }, 200);\n        }\n      }, 1000);\n    });\n  }\n\n  gameId(index: number, item: any): string {\n    if (item && item.id) {\n      return item.id;\n    }\n    return String(index);\n  }\n}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { LiveFeedPage } from './live-feed.page';\nimport { DiamondComponentModule } from '../diamond/diamond.module';\nimport { LiveFeedPageRoutingModule } from './live-feed-routing.module';\nimport { TeamComponentModule } from '../team/team.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    LiveFeedPageRoutingModule,\n    DiamondComponentModule,\n    TeamComponentModule,\n  ],\n  declarations: [LiveFeedPage]\n})\nexport class LiveFeedPageModule {}\n"]}